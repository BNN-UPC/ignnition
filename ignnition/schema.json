{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://example.com/product.schema.json",
    "title": "Model description",
    "description": "The description of the model that the framework will use",
    "type": "object",
    "properties":
    {
        "entities": {
            "description": "Definition of the entities",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Name of the entity",
                        "type": "string"
                    },
                    "state_dimension": {
                        "description": "Size of the hidden state of this entity",
                        "type": [
                            "number",
                            "string"
                        ]
                    },
                    "initial_state": {
                        "type": "array",
                        "items": {
                            "description": "Define each of the operations for the state creation",
                            "type": "object",
                            "properties": {
                                "type": {
                                    "description": "Type of operation to apply",
                                    "type": "string",
                                    "enum": [
                                        "neural_network",
                                        "build_state",
                                        "product"
                                    ]
                                },
                                "nn_name": {
                                    "description": "Reference the neural network to be used",
                                    "type": "string"
                                },
                                "input": {
                                    "description": "Input of this operation",
                                    "type": "array",
                                    "items": {
                                        "description": "define the inputs",
                                        "type": "string"
                                    }
                                },
                                "type_product": {
                                    "description": "Type of product to be applied",
                                    "type": "string",
                                    "enum": [
                                        "dot_product",
                                        "element_wise",
                                        "mat_mult"
                                    ]
                                },
                                "output_name": {
                                    "description": "Define an output name for the result, to reference it later",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "type"
                            ],
                            "allOf": [
                                {
                                    "if": {
                                        "properties": {
                                            "type": {
                                                "const": "neural_network"
                                            }
                                        }
                                    },
                                    "then": {
                                        "required": [
                                            "nn_name",
                                            "input"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "type": {
                                                "const": "build_state"
                                            }
                                        }
                                    },
                                    "then": {
                                        "required": [
                                            "input"
                                        ]
                                    }
                                },
                                {
                                    "if": {
                                        "properties": {
                                            "type": {
                                                "const": "product"
                                            }
                                        }
                                    },
                                    "then": {
                                        "required": [
                                            "type_product",
                                            "input"
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                },
                "required": [
                        "name",
                        "state_dimension",
                        "initial_state"
                    ]
            }
        },
        "message_passing":
        {
            "description": "Message passing strategy",
            "type": "object",
            "properties":
            {
                "num_iterations":
                {
                    "description": "Number of iterations the algorithm",
                    "type": ["number", "string"]
                },
                "stages":
                {
                    "type": "array",
                    "items":
                    {
                        "description": "Definition of each of the inner steps for each iteration",
                        "type": "object",
                        "properties":
                        {
                            "stage_message_passings":
                            {
                                "type": "array",
                                "items": {
                                    "description": "Definition of a single essage passing from source to destination",
                                    "type": "object",
                                    "properties": {
                                        "destination_entity": {
                                            "description": "Name of the destination entity receiving the messages",
                                            "type": "string"
                                        },
                                        "source_entities":
                                        {
                                            "type": "array",
                                            "items":
                                            {
                                                "description": "Definition of each source entity",
                                                "type": "object",
                                                "properties":
                                                {
                                                    "name":
                                                    {
                                                        "description": "Name of the source entity",
                                                        "type": "string"
                                                    },
                                                    "message":
                                                    {
                                                        "type": "array",
                                                        "items":
                                                        {
                                                            "description": "Define each of the operations for the message creation function",
                                                            "type": "object",
                                                            "properties":
                                                            {
                                                                "type":
                                                                {
                                                                    "description": "Type of operation to apply",
                                                                    "type": "string",
                                                                    "enum": ["neural_network", "direct_assignment", "product"]
                                                                },
                                                                "nn_name":
                                                                {
                                                                    "description": "Reference the neural network to be used",
                                                                    "type": "string"
                                                                },
                                                                "input":
                                                                {
                                                                    "description": "Input of this operation",
                                                                    "type": "array",
                                                                    "items":{
                                                                        "description": "define the inputs",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type_product":
                                                                {
                                                                    "description": "Type of product to be applied",
                                                                    "type": "string",
                                                                    "enum": ["dot_product", "element_wise", "mat_mult"]
                                                                },
                                                                "output_name":
                                                                {
                                                                    "description": "Define an output name for the result, to reference it later",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": ["type"],
                                                            "allOf":
                                                            [
                                                                {
                                                                    "if": {
                                                                        "properties": { "type": { "const": "neural_network" } }
                                                                    },
                                                                    "then": {
                                                                        "required": ["nn_name", "input"]
                                                                    }
                                                                },
                                                                {
                                                                    "if": {
                                                                        "properties": { "type": { "const": "product" } }
                                                                    },
                                                                    "then": {
                                                                        "required": ["type_product", "input"]
                                                                    }
                                                                }
                                                            ]
                                                        }
                                                    }
                                                },
                                                "required": ["name"]
                                            }
                                        },
                                        "aggregation":
                                        {
                                            "type": "array",
                                            "items": {
                                                "description": "How the messages are combined by the destination source",
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "sum",
                                                            "mean",
                                                            "max",
                                                            "min",
                                                            "ordered",
                                                            "attention",
                                                            "concat",
                                                            "interleave",
                                                            "convolution",
                                                            "edge_attention",
                                                            "neural_network"
                                                        ]
                                                    },
                                                    "concat_axis": {
                                                        "description": "Define how to concatenate the messages together",
                                                        "type": "integer",
                                                        "enum": [1,2]
                                                    },
                                                    "interleave_definition": {
                                                        "description": "Describes how the interleaving is done",
                                                        "type": "string"
                                                    },
                                                    "activation_function": {
                                                        "description": "Activation function to use for convoluting",
                                                        "type": "string"
                                                    },
                                                    "nn_name": {
                                                        "description": "Reference the name of a neural network",
                                                        "type": "string"
                                                    },
                                                    "weight_initialization": {
                                                        "description": "Name of the function to be used for the weight initialization",
                                                        "type": "string"
                                                    },
                                                    "output_name":
                                                    {
                                                        "description": "Define an output name for the result, to reference it later",
                                                        "type": "string"
                                                    },
                                                    "input":
                                                    {
                                                        "description": "Input of this operation",
                                                        "type": "array",
                                                        "items":{
                                                            "description": "Define the inputs",
                                                            "type": "string"
                                                        }
                                                    }
                                                },
                                                "allOf": [
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "type": {
                                                                    "const": "interleave"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "required": [
                                                                "interleave_definition"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "type": {
                                                                    "const": "concat"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "required": [
                                                                "concat_axis"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "if": {
                                                            "properties": {
                                                                "type": {
                                                                    "const": "edge_attention"
                                                                }
                                                            }
                                                        },
                                                        "then": {
                                                            "required": [
                                                                "nn_name"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "update":
                                        {
                                            "type": "object",
                                            "properties":
                                            {
                                                "type":
                                                {
                                                    "description": "Type of operation for the update given the aggregated and the current hs",
                                                    "type": "string",
                                                    "enum": ["neural_network", "direct_assignment"]
                                                },
                                                "nn_name":
                                                {
                                                    "description": "Reference the neural network to be used",
                                                    "type": "string"
                                                }
                                            },
                                            "allOf":
                                            [
                                                {
                                                    "if": {
                                                        "properties": { "type": { "const": "neural_network" } }
                                                    },
                                                    "then": {
                                                        "required": ["nn_name"]
                                                    }
                                                }
                                            ]
                                        }

                                    },
                                    "required": [ "source_entities", "destination_entity", "aggregation"]

                                }
                            }
                        },
                        "required": ["stage_message_passings"]
                    }
                }
            },
            "required": ["num_iterations", "stages"]
        },
        "readout":
        {
            "type": "array",
            "items":
            {
                "description": "Readout model which will make predictions using the hidden states of one entity type",
                "type": "object",
                "properties":
                {
                    "type":
                    {
                        "description": "Type of operation",
                        "type": "string",
                        "enum" : ["pooling", "product", "neural_network", "extend_tensor", "extend_adjacencies", "concat"]
                    },
                    "type_pooling":
                    {
                        "description": "Type of operation to do pooling with",
                        "type": "string",
                        "enum": ["sum", "max", "mean"]
                    },
                    "type_product":
                    {
                        "description": "Type of product to be applied",
                        "type": "string",
                        "enum": ["dot_product", "element_wise", "mat_mult"]
                    },
                    "input":
                    {
                        "description": "Array of input of the operation",
                        "type": "array",
                        "items":
                        {
                            "description": "Entity the hidden states of which we want to use for the prediction or name of a previous output name.",
                            "type": "string"
                        }
                    },
                    "output_label":
                    {
                        "description": "Labels matching the dataset which contains the true labels of the predictions we aim to make.",
                        "type": "array",
                        "items":
                        {
                            "description": "One of the labels",
                            "type": "string"
                        }
                    },
                    "nn_name":
                    {
                        "description": "References the neural network to use as readout",
                        "type": "string"
                    },
                    "output_name":
                    {
                        "description": "Define an output name for the result, to reference it later",
                        "type": "string"
                    },
                    "output_name_src":
                    {
                        "description": "Define the output name of the extended source, to reference it later",
                        "type": "string"
                    },
                    "output_name_dst":
                    {
                        "description": "Define the output name of the extended destiantion, to reference it later",
                        "type": "string"
                    },
                    "adj_list":
                    {
                        "Description": "Define the adjacency list from the source to the destination values provided",
                        "type": "string"
                    }
                },
                "allOf":
                [
                    {
                        "if": {
                            "properties": { "type": { "const": "pooling" } }
                        },
                        "then": {
                            "required": ["type_pooling"]
                        }
                    },
                    {
                        "if": {
                            "properties": { "type": { "const": "product" } }
                        },
                        "then": {
                            "required": ["type_product"]
                        }
                    },
                    {
                        "if": {
                            "properties": { "type": { "const": "neural_network" } }
                        },
                        "then": {
                            "required": ["nn_name"]
                        }
                    },
                    {
                        "if": {
                            "properties": { "type": { "const": "extend_adjacencies" } }
                        },
                        "then": {
                            "required": ["adj_list", "output_name_src", "output_name_dst"]
                        }
                    }
                ],
                "required": ["input"]
            }
        },

        "neural_networks":
        {
            "description": "Here we describe all the feed_forward models that will be referenced later",
            "type": "array",
            "items": {
                "description": "Single feed_forward model",
                "type": "object",
                "properties": {
                    "nn_name": {
                        "description": "Define the name of the model",
                        "type": "string"
                    },
                    "nn_architecture": {
                        "description": "Define the architecture",
                        "type": "array",
                        "items": {
                            "description": "Definition of a single layer of the neural network",
                            "type": "object",
                            "properties": {
                                "type_layer": {
                                    "description": "Type of layer",
                                    "type": "string"
                                },
                                "name": {
                                    "description": "Name given to this layer.",
                                    "type": "string"
                                }
                            }
                        },
                        "required": [
                            "type_layer"
                        ]
                    }
                }
            }
        }

    }
}
